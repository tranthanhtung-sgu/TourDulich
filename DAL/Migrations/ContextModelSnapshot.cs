// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cateogries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Du lịch biển"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Du lịch quê"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Du lịch dã ngoại"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Du lịch ẩm thực"
                        });
                });

            modelBuilder.Entity("DAL.Entities.ChiPhi", b =>
                {
                    b.Property<int>("MaChiPhi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DoanDulichMaDoan")
                        .HasColumnType("int");

                    b.Property<int?>("LoaiChiPhiMaLoaiChiPhi")
                        .HasColumnType("int");

                    b.Property<int>("MaDoan")
                        .HasColumnType("int");

                    b.Property<int>("MaLoaiChiPhi")
                        .HasColumnType("int");

                    b.Property<float>("SoTien")
                        .HasColumnType("real");

                    b.HasKey("MaChiPhi");

                    b.HasIndex("DoanDulichMaDoan");

                    b.HasIndex("LoaiChiPhiMaLoaiChiPhi");

                    b.ToTable("Chiphi");
                });

            modelBuilder.Entity("DAL.Entities.ChiTietDoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DoanDulichMaDoan")
                        .HasColumnType("int");

                    b.Property<int?>("KhachMaKhachHang")
                        .HasColumnType("int");

                    b.Property<int>("MaDoan")
                        .HasColumnType("int");

                    b.Property<int>("MaKhachHang")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoanDulichMaDoan");

                    b.HasIndex("KhachMaKhachHang");

                    b.ToTable("ChiTietDoan");
                });

            modelBuilder.Entity("DAL.Entities.DoanDulich", b =>
                {
                    b.Property<int>("MaDoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("DoanhThu")
                        .HasColumnType("real");

                    b.Property<int>("MaTour")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKhoiHanh")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.HasKey("MaDoan");

                    b.HasIndex("TourId");

                    b.ToTable("DoanDuLich");
                });

            modelBuilder.Entity("DAL.Entities.Khach", b =>
                {
                    b.Property<int>("MaKhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuocTich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoCMND")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhachHang");

                    b.ToTable("Khach");
                });

            modelBuilder.Entity("DAL.Entities.LoaiChiPhi", b =>
                {
                    b.Property<int>("MaLoaiChiPhi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenLoaiChiPhi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiChiPhi");

                    b.ToTable("LoaiChiPhi");
                });

            modelBuilder.Entity("DAL.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationName = "Đà Lạt"
                        },
                        new
                        {
                            Id = 2,
                            LocationName = "Hà Nội"
                        },
                        new
                        {
                            Id = 3,
                            LocationName = "Hồ Chí Minh"
                        },
                        new
                        {
                            Id = 4,
                            LocationName = "Phú Quốc"
                        });
                });

            modelBuilder.Entity("DAL.Entities.NhanVien", b =>
                {
                    b.Property<int>("MaNhanVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenNhanVien")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("DAL.Entities.PhanBo_NhanVien_Doan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DoanDulichMaDoan")
                        .HasColumnType("int");

                    b.Property<int>("MaDoan")
                        .HasColumnType("int");

                    b.Property<int>("MaNhanVien")
                        .HasColumnType("int");

                    b.Property<int?>("NhanVienMaNhanVien")
                        .HasColumnType("int");

                    b.Property<string>("NhiemVu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoanDulichMaDoan");

                    b.HasIndex("NhanVienMaNhanVien");

                    b.ToTable("PhanBo_NhanVien_Doan");
                });

            modelBuilder.Entity("DAL.Entities.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Money")
                        .HasColumnType("real");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("GiaTour");
                });

            modelBuilder.Entity("DAL.Entities.Tour", b =>
                {
                    b.Property<int>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGoi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TourId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Tours");

                    b.HasData(
                        new
                        {
                            TourId = 1,
                            CategoryId = 1,
                            MoTa = "Du lịch Đà Lạt- Thiền Viện Trúc Lâm Quê Garden - Kim Ngân Hills Resort từ Sài Gòn 2021. Khi tham gia tour cùng Du Lịch Việtngoài việc thưởng lãm vẻ đẹp đặc sắc của các loài hoa, khung cảnh thơ mộng với khí trời se lạnh của vùng đất phố núi, Quý khách sẽ được cảm nhận Đà Lạt chính là địa điểm du lịch đi hoài không chán bởi những “tọa độ sống ảo đẹp không góc chết” mang những phong cách hoàn toàn riêng biệt. Nếu như Đà Lạt View Coffee nổi danh với hình ảnh “Cổng trời thứ 2” phá cách và độc đáo, thì Quê Garden cũng đang làm mưa làm gió trên các trang mạng xã hội, là một khu vườn với lối kiến trúc Nhật Bản nằm giữa cao nguyên Lâm Viên. Cuối cùng là ngôi làng cổ kính Châu Âu - Kim Ngân Hills với cả bầu trời thú cưng hiền lành cùng khu ẩm thực đặc biệt mang dấu.",
                            TenGoi = "Du lịch Đà Lạt - QUÊ Garden - Đà Lạt View Coffee - Kim Ngân Hills Resort từ Sài Gòn 2021"
                        });
                });

            modelBuilder.Entity("DAL.Entities.TourDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("Serial")
                        .HasColumnType("int");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("TourId");

                    b.ToTable("ChiTietTour");
                });

            modelBuilder.Entity("DAL.Entities.ChiPhi", b =>
                {
                    b.HasOne("DAL.Entities.DoanDulich", "DoanDulich")
                        .WithMany("DSChiPhi")
                        .HasForeignKey("DoanDulichMaDoan");

                    b.HasOne("DAL.Entities.LoaiChiPhi", "LoaiChiPhi")
                        .WithMany("DSChiPhi")
                        .HasForeignKey("LoaiChiPhiMaLoaiChiPhi");

                    b.Navigation("DoanDulich");

                    b.Navigation("LoaiChiPhi");
                });

            modelBuilder.Entity("DAL.Entities.ChiTietDoan", b =>
                {
                    b.HasOne("DAL.Entities.DoanDulich", "DoanDulich")
                        .WithMany("DSChiTietDoans")
                        .HasForeignKey("DoanDulichMaDoan");

                    b.HasOne("DAL.Entities.Khach", "Khach")
                        .WithMany("DSChiTietDoan")
                        .HasForeignKey("KhachMaKhachHang");

                    b.Navigation("DoanDulich");

                    b.Navigation("Khach");
                });

            modelBuilder.Entity("DAL.Entities.DoanDulich", b =>
                {
                    b.HasOne("DAL.Entities.Tour", "Tour")
                        .WithMany("DSDoanDulich")
                        .HasForeignKey("TourId");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("DAL.Entities.PhanBo_NhanVien_Doan", b =>
                {
                    b.HasOne("DAL.Entities.DoanDulich", "DoanDulich")
                        .WithMany("DSPhanBo")
                        .HasForeignKey("DoanDulichMaDoan");

                    b.HasOne("DAL.Entities.NhanVien", "NhanVien")
                        .WithMany("DSPhanBo")
                        .HasForeignKey("NhanVienMaNhanVien");

                    b.Navigation("DoanDulich");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("DAL.Entities.Price", b =>
                {
                    b.HasOne("DAL.Entities.Tour", "Tour")
                        .WithMany("Prices")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("DAL.Entities.Tour", b =>
                {
                    b.HasOne("DAL.Entities.Category", "Category")
                        .WithMany("Tours")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DAL.Entities.TourDetail", b =>
                {
                    b.HasOne("DAL.Entities.Location", "Location")
                        .WithMany("TourDetails")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Tour", "Tour")
                        .WithMany("TourDetails")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("DAL.Entities.Category", b =>
                {
                    b.Navigation("Tours");
                });

            modelBuilder.Entity("DAL.Entities.DoanDulich", b =>
                {
                    b.Navigation("DSChiPhi");

                    b.Navigation("DSChiTietDoans");

                    b.Navigation("DSPhanBo");
                });

            modelBuilder.Entity("DAL.Entities.Khach", b =>
                {
                    b.Navigation("DSChiTietDoan");
                });

            modelBuilder.Entity("DAL.Entities.LoaiChiPhi", b =>
                {
                    b.Navigation("DSChiPhi");
                });

            modelBuilder.Entity("DAL.Entities.Location", b =>
                {
                    b.Navigation("TourDetails");
                });

            modelBuilder.Entity("DAL.Entities.NhanVien", b =>
                {
                    b.Navigation("DSPhanBo");
                });

            modelBuilder.Entity("DAL.Entities.Tour", b =>
                {
                    b.Navigation("DSDoanDulich");

                    b.Navigation("Prices");

                    b.Navigation("TourDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
